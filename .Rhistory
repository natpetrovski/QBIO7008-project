library(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
# Make sure 0s and 1s are slightly nudged
hard_coral_b <- hard_coral_b %>%
mutate(Proportion_adj = ifelse(Proportion == 0, 0.0001,
ifelse(Proportion == 1, 0.9999, Proportion)))
# Fit beta mixed model
m_beta <- glmmTMB(Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family())
summary(m_beta)
# Get predictions
hard_coral_b$predicted_beta <- predict(m_beta, type = "response")
# Plot
ggplot(hard_coral_b, aes(x = year, y = Proportion_adj)) +
geom_point(aes(color = SITE), alpha = 0.6) +
geom_line(aes(y = predicted_beta), color = "red", size = 1) +
labs(title = "Beta Model: Predicted Bleached Coral Proportions",
y = "Proportion (adjusted)", x = "Year") +
theme_minimal()
# Fixed-effects only beta model
m_beta_simple <- glmmTMB(Proportion_adj ~ year + bleach_event,
data = hard_coral_b,
family = beta_family())
summary(m_beta_simple)
hard_coral_b %>%
group_by(year) %>%
summarise(
min_prop = min(Proportion_adj),
max_prop = max(Proportion_adj),
n_sites = n_distinct(SITE)
)
m_beta_betar <- glmmTMB(Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family(link = "loglog"))
summary(m_beta_betar)
library(glmmTMB)
View(hard_coral_b)
hard_coral_b$predicted <- predict(m_beta_simple, type = "response")
ggplot(hard_coral_b, aes(x = year, y = Proportion_adj, color = SITE)) +
geom_point(alpha = 0.4) +
geom_line(aes(y = predicted), color = "black", size = 1.2) +
labs(
title = "Predicted Bleaching Proportion Over Time",
y = "Adjusted Bleached Proportion",
x = "Year"
) +
theme_minimal()
View(hard_coral_b)
############################by site
m_beta_site <- glmmTMB(
Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family()
)
# Add predictions to the dataset
hard_coral_b$predicted_site <- predict(m_beta_site, type = "response")
ggplot(hard_coral_b, aes(x = year, y = predicted_site, color = SITE)) +
geom_line(size = 1.1) +
geom_point(aes(y = Proportion_adj), alpha = 0.4) +  # optional: raw data points
labs(
title = "Predicted Bleaching Trends by Site",
y = "Predicted Bleached Proportion",
x = "Year"
) +
theme_minimal() +
theme(legend.position = "right")
View(m_beta_simple)
View(hard_coral_b)
# Add predictions from the fixed-effects beta model
hard_coral_b$predicted <- predict(m_beta_simple, type = "response")
# Plot predictions by site
ggplot(hard_coral_b, aes(x = year, y = predicted, color = SITE)) +
geom_line(size = 1) +
geom_point(aes(y = Proportion_adj), alpha = 0.5) +  # add actual observed values
labs(
title = "Predicted Bleaching Over Time by Site",
x = "Year",
y = "Predicted Proportion Bleached",
color = "Site"
) +
theme_minimal()
#plot above but by site
ggplot(hard_coral_b, aes(x = year, y = predicted, color = SITE)) +
geom_line(size = 1) +
geom_point(aes(y = Proportion_adj), alpha = 0.5) +  # add actual observed values
labs(
title = "Predicted Bleaching Over Time by Site",
x = "Year",
y = "Predicted Proportion Bleached",
color = "Site"
) +
theme_minimal()
setwd("~/Desktop/QBIOL/QBIO7008-ResearchProject/WorkingData")
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv("coral-watch-heron-cleaned.csv")
#select columns
CWsub <- coral_watch %>%
select("SITE", "DATE", "Activity", "Coral_No", "Colour_Code_Lightest", "Colour_Code_Darkest",
"Average_Colour", "Coral_Type")
#change data to date format
CWsub <- CWsub %>%
mutate(DATE = dmy(DATE))
str(CWsub)
#set categorical variables as factors
CWsub <- CWsub %>%
mutate(SITE = as.factor(SITE),
Activity = as.factor(Activity),
Coral_Type = as.factor(Coral_Type))
levels(CWsub$Coral_Type)
##remove soft corals
CWsub <- CWsub %>%
filter(Coral_Type != "Soft corals") %>%
droplevels()
levels(CWsub$Coral_Type)
#create new columns for colour scores with just number
CWsub <- CWsub %>%
mutate(
Lightest_num = str_extract(`Colour_Code_Lightest`, "[1-6]") %>% as.numeric(),
Darkest_num = str_extract(`Colour_Code_Darkest`, "[1-6]") %>% as.numeric()
)
unique(CWsub$SITE)
levels(CWsub$SITE)
##Remove sites
CWsub <- CWsub %>%
filter(!SITE %in% c("Gorgonian Hole", "Gantry", "Pam's Point", "Plate Ledge", "North Beach", "North West")) %>%
droplevels()
CWsub %>%
count(SITE)
#select month range
CWsub <- CWsub %>%
filter(month(DATE) >= 9 & month(DATE) <= 11)
#check it worked
CWsub %>%
mutate(month = month(DATE)) %>%
distinct(month)
#now filter years
CWsub <- CWsub %>%
filter(year(DATE) >= 2013)
#create a column just for year
CWsub <- CWsub %>%
mutate(year = year(DATE)) %>%
relocate(year, .before=1 ) %>%
mutate(year = as.factor(year))
unique(CWsub$year)
##see how many NA's
CWsub %>%
filter(if_any(everything(), is.na))
#change format so 'light and 'dark' colours are in one column
CWsublong <- CWsub %>%
pivot_longer(
cols = c(Lightest_num, Darkest_num),
names_to = "Type",
values_to = "Colour_Code_num"
)
##add bleaching column?????
CWsublong <- CWsublong %>%
mutate(health = ifelse(Colour_Code_num <= 1, "bleached", "not bleached"))
#create survey ID
CWsublong<- CWsublong %>%
unite(survey_id, SITE, DATE, sep = "_", remove = FALSE)
write_csv(CWsublong, "coralwatch_sub.csv")
RC_S <- read_csv("RC_Substrate_cleaned.csv")
str(RC_S)
glimpse(RC_S)
#convert date as date
RC_Sb <- RC_S %>%
mutate(DATE = dmy(DATE))
names(RC_S)
#remove unwanted columns
RC_Sb <- RC_Sb %>%
select(-datetime, -REEF, -RESEARCH_SITE)
#create a column just for year
RC_Sb <- RC_Sb %>%
mutate(year = year(DATE)) %>%
relocate(year, .before=1 ) %>%
mutate(year = as.factor(year))
unique(RC_Sb$year)
#now filter years
RC_Sb <- RC_Sb %>%
filter(year(DATE) >= 2013)
#check months
RC_Sb %>%
mutate(month = month(DATE)) %>%
distinct(month)
##Remove sites
unique(RC_Sb$SITE)
RC_Sb <- RC_Sb %>%
filter(!SITE %in% c("Blue Pools", "Gorgonian Hole", "Pancakes", "Coral Gardens", "Stevos Carbonara"))
##Remove sites
unique(RC_Sb$SITE)
#change any dive site names to match CW
RC_Sb <- RC_Sb %>%
mutate(SITE = case_when(
SITE == "Half Way (Doug's Place)" ~ "Half Way",
SITE == "Cappuccino Express" ~ "Cappuccino",
TRUE ~ SITE
))
#check counts
RC_Sb %>%
count(SITE)
##see how many NA's
RC_Sb %>%
filter(if_any(everything(), is.na))
#set site as factor
RC_Sb <- RC_Sb %>%
mutate(SITE = as.factor(SITE))
str(RC_Sb)
#Pivot RCA data
# Identify all columns that start with "SUBSTRATE_"
substrate_cols <- RC_Sb %>%
select(starts_with("SUBSTRATE_")) %>%
colnames()
# Reshape
RCA_long <- RC_Sb %>%
pivot_longer(
cols = all_of(substrate_cols),
names_to = "point",
values_to = "substrate_code")
#Sorts by site and date to get count/proportions of substrate. Might be better for plotting, can select columns out if needed.
substrate_prop <- RCA_long %>%
group_by(SITE, DATE, year, substrate_code) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(SITE, year) %>%
mutate(
total_points = sum(count),
proportion = count / total_points
) %>%
ungroup()
#Merge site and date rows, substr codes as columns
SubPropSY <- RCA_long %>%
group_by(SITE, year, substrate_code) %>%
summarise(count = n(), .groups = "drop") %>% #counts all instances of substrate code, ungroups
group_by(SITE, year) %>% #groups again by survey
mutate(
total_points = sum(count),
proportion = round(count / total_points, 3)
) %>%
select(SITE, year, substrate_code, proportion) %>% #keeps only columns we need
pivot_wider( #turns table wide format
names_from = substrate_code,
values_from = proportion,
values_fill = 0 #fill instead of NA
)
write_csv(SubPropSY, "RC_Substrate_Proportions.csv")
############################################################
#Pivot back to long format, might be easier for ggplot, retains 0 prop values
substrate_long <- SubPropSY %>%
pivot_longer(
cols = -c(SITE, year),
names_to = "Substrate",
values_to = "Proportion"
)
unique(substrate_long$Substrate)
substrate_long_grouped <- substrate_long %>%
mutate(substrate_group = case_when(
Substrate %in% c("HC", "HCBR", "HCE", "HCP", "HCM", "HCF") ~ "HC",
Substrate == "HCB" ~ "HCB",
Substrate %in% c("RB", "RCCA", "RCTA", "SD", "RC", "SI") ~ "NL",
Substrate %in% c("RKCTA", "RKC", "RKCNIA") ~ "RKC",
Substrate %in% c("SC", "SCL", "SCZ", "SCB") ~ "SC",
Substrate %in% c("SP", "SPE") ~ "SP",
Substrate == "OT" ~ "OT",
Substrate == "NIA" ~ "NIA",
Substrate == "NR" ~ "NR",
TRUE ~ "Unknown")) %>%
group_by(SITE, year, substrate_group) %>%
summarise(Proportion =sum(Proportion), .groups = "drop") ##make sure to run this part or the props dont make sense, need to sum them
write.csv(substrate_long_grouped, "substrate_long_grouped.csv", row.names = FALSE)
#see if any codes were missed
substrate_long_grouped %>%
filter(substrate_group == "Unknown") %>%
distinct(substrate_group)
#counts of NR - assume it means not recorded????????
numNR <- substrate_long_grouped %>%
filter(substrate_group == "NR")
unique(numNR$Proportion)
#####CoralWatch visualisations and statistics###
library(ggplot2)
library(tidyverse)
##########CORAL WATCH###########################
CWsub <- read_csv(file = "coralwatch_sub.csv")
#####RCA visualisations and statistics###
library(ggplot2)
library(tidyverse)
##########Reef Check Australia###########################
RC_SubPropSY <- read_csv(file = "RC_Substrate_Proportions.csv")
RC_substrate_long_grouped <- read_csv(file = "RC_substrate_long_grouped.csv")
View(RC_substrate_long_grouped)
#HC and HCB prop over sites and years to see increase/decrease
HCtrend <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
group_by(SITE, year, substrate_group) %>%
summarise(total = sum(Proportion), .groups = "drop")
###see if HC and HCB prop changes respectively i.e. is there a relationship between them
# Reshape to wide format so HC and HCB are in their own columns
HCtrend_wide <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
pivot_wider(names_from = substrate_group, values_from = Proportion)
View(HCtrend)
View(HCtrend_wide)
View(RC_substrate_long_grouped)
View(HCtrend)
View(HCtrend_wide)
View(HCtrend_wide)
View(HCtrend)
######proportion of colour scores per site and year
CWsub %>%
group_by(SITE, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(Colour_Code_num), y = prop, fill = factor(Colour_Code_num))) +
geom_col() +
facet_grid(SITE ~ year, scales = "free_y") +
labs(
title = "Proportion of Colour Scores per Site and Year",
x = "Colour Score",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
######proportion of colour scores per site and year
p <- CWsub %>%
group_by(SITE, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(Colour_Code_num), y = prop, fill = factor(Colour_Code_num))) +
geom_col() +
facet_grid(SITE ~ year, scales = "free_y") +
labs(
title = "Proportion of Colour Scores per Site and Year",
x = "Colour Score",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#####detect bleaching if 1 is more than 20% per survey
CW_bleach_detect <- CWsub %>%
group_by(survey_id, SITE, DATE, year) %>%
summarise(
observations = n(),
n_bleach = sum(Colour_Code_num == 1),
prop_bleach = n_bleach / observations
) %>% ungroup %>%
mutate(bleached = prop_bleach > 0.2)
###as above but merging surveys by year
CW_bleach_detect_year <- CW_bleach_detect %>%
group_by(year, SITE, bleached) %>%
reframe(
n_surveys = n_distinct(survey_id, na.rm = TRUE),
n_observations = sum(observations),
n_bleached_obs = sum(n_bleach),
prop_bleach_obs = n_bleached_obs / n_observations)
View(CW_bleach_detect)
###plot (above) bleaching by year (sites combined)
CW_bleach_detect_year %>%
group_by(year, bleached) %>%
summarise(total_surveys = sum(n_surveys), .groups = "drop") %>%
ggplot(aes(x = factor(year), y = total_surveys, fill = bleached)) +
geom_col(position = "stack") +
labs(title = "Surveys with Bleaching Detected",
x = "Year",
y = "Number of Surveys",
fill = "Bleached (>20% 1s)") +
scale_fill_manual(values = c("tan2", "tomato2")) +
theme_minimal()
###each survey plotted to visualise prop bleached corals per survey
ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_line(group = 1, color = "darkorange2", linewidth = 1.2) +
geom_point(aes(color = prop_bleach_obs), size = 4) +
scale_color_gradient(high = "#FFE5B4", low = "#D35400") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
#title = "",
x = "Year",
y = "Proportion of Bleached Corals Per Survey",
color = "Bleaching Rate"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(CW_bleach_detect_year)
#only looking at proportion bleached by year (surveys combined)
ggplot(CW_bleach_detect_year, aes(x = year, y = prop_bleach_obs, group = SITE, color = SITE)) +
geom_line() +
geom_point() +
labs(title = "Bleaching Proportion Over Time by Site",
x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ SITE)
##heatmap of proportion bleached by year
ggplot(CW_bleach_detect_year, aes(x = factor(year), y = (SITE), fill = prop_bleach_obs)) +
geom_tile(color = "white", linewidth = 0.3) +
scale_fill_gradient(low = "#FFFFCC", high = "#E31A1C", na.value = "grey90") +
labs(title = "Bleaching Heatmap by Site and Year",
x = "Year", y = "Site", fill = "Prop. Bleached") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#as above but boxplots (no site), might be good to see range
ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Distribution of Bleaching Across Sites by Year",
x = "Year", y = "Proportion Bleached") +
theme_minimal()
##############################################################
##APPLY TIME SERIES LINEAR MODEL
CW_bleach_detect_year <- CW_bleach_detect_year %>%
mutate(prop_bleach_adj = ifelse(prop_bleach_obs == 0, 0.0001,
ifelse(prop_bleach_obs == 1, 0.9999, prop_bleach_obs)))
library(glmmTMB)
m_beta_cw <- glmmTMB(prop_bleach_adj ~ year,
data = CW_bleach_detect_year,
family = beta_family(link = "logit"))
summary(m_beta_cw)
###example barplot with substrate proportions (don't like axis)
ggplot(RC_substrate_long_grouped, aes(x = year, y = Proportion, fill = substrate_group)) +
geom_col() +
facet_wrap(~ SITE) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(y = "Proportion",
x = "Year"
) +
theme_minimal()
###example barplot with HC vs HCB proportions only
RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HCB", "HC")) %>%
ggplot(aes(x = year, y = Proportion, fill = substrate_group)) +
geom_col(position = "stack") +
facet_wrap(~ SITE) +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(y = "Proportion",
x = "Year")  +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
##Loop over each group and make a separate plot
plots <- map2(site_list,labels, function(site, label) {
p <- RC_substrate_long_grouped %>%
filter(SITE == site) %>%
ggplot(aes(x = factor(year), y = Proportion, fill = substrate_group)) +
geom_col() +
scale_fill_manual(values = substrate_colours, name = "Substrate") +
#scale_fill_brewer(palette = "RdYlGn", name = "Substrate") +
labs(title = label, x = NULL, y = NULL) +
theme_minimal(base_size = 10) +
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
strip.text = element_text(face = "bold"),
panel.spacing = unit(1.5, "lines"),
legend.position = "none",
plot.margin = margin(10, 10, 10, 10)  # Add space around the plots
)
return(p)
})
##see plot before merging
print(plots[[2]])
##see plot before merging
print(plots[[2]])
#filter data to make loop easier
filtered <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB"))
#HC and HCB prop over sites and years to see increase/decrease
HCtrend <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
group_by(SITE, year, substrate_group) %>%
summarise(total = sum(Proportion), .groups = "drop")
###see if HC and HCB prop changes respectively i.e. is there a relationship between them
# Reshape to wide format so HC and HCB are in their own columns
HCtrend_wide <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
pivot_wider(names_from = substrate_group, values_from = Proportion)
#look at proporton of HC and HCB trend over time, plot will need fixing, messy axis
ggplot(HCtrend_wide, aes(x = year)) +
geom_line(aes(y = HC, color = "Healthy")) +
geom_line(aes(y = HCB, color = "Bleached")) +
facet_wrap(~ SITE) +
labs(y = "Proportion Cover", color = "Hard Coral") +
theme_minimal()
# Make sure 0s and 1s are slightly nudged
hard_coral_b <- hard_coral_b %>%
mutate(Proportion_adj = ifelse(Proportion == 0, 0.0001,
ifelse(Proportion == 1, 0.9999, Proportion)))
#fit glmmTMB model(removed site as random factor as it ruined the model - little site variation)
m_beta_simple <- glmmTMB(Proportion_adj ~ year + bleach_event,
data = hard_coral_b,
family = beta_family(link = "logit"))
summary(m_beta_simple)
# Make sure 0s and 1s are slightly nudged
hard_coral_b <- hard_coral_b %>%
mutate(Proportion_adj = ifelse(Proportion == 0, 0.0001,
ifelse(Proportion == 1, 0.9999, Proportion)))
#re run the model with dummmy for harrys bommie 2024
hard_coral_b <- hard_coral_b %>%
mutate(bleach_event = if_else(SITE == "Harry's Bommie" & year == 2024, 1, 0))
hard_coral_b <- RC_substrate_long_grouped %>%
filter(substrate_group == "HCB")
#re run the model with dummmy for harrys bommie 2024
hard_coral_b <- hard_coral_b %>%
mutate(bleach_event = if_else(SITE == "Harry's Bommie" & year == 2024, 1, 0))
# Make sure 0s and 1s are slightly nudged
hard_coral_b <- hard_coral_b %>%
mutate(Proportion_adj = ifelse(Proportion == 0, 0.0001,
ifelse(Proportion == 1, 0.9999, Proportion)))
#fit glmmTMB model(removed site as random factor as it ruined the model - little site variation)
m_beta_simple <- glmmTMB(Proportion_adj ~ year + bleach_event,
data = hard_coral_b,
family = beta_family(link = "logit"))
summary(m_beta_simple)
