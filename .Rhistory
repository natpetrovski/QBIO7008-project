group_by(SITE_label, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE_label, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(year), y = prop, fill = factor(Colour_Code_num))) +
geom_col(position = "stack") +
facet_wrap(~SITE_label) +
labs(x = "Year",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(strip.text.y.right = element_text(angle = 0))
p1b
ggsave("CW_ColourScore_stacked.jpeg", p1b, width = 13, height = 9, dpi = 300)
library(tidyverse)
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv(file = "coral-watch-heron-cleaned.csv")
#select columns
CWsub <- coral_watch %>%
select("SITE", "DATE", "Activity", "Coral_No", "Colour_Code_Lightest", "Colour_Code_Darkest",
"Average_Colour", "Coral_Type")
#change data to date format
CWsub <- CWsub %>%
mutate(DATE = dmy(DATE))
str(CWsub)
#set categorical variables as factors
CWsub <- CWsub %>%
mutate(SITE = as.factor(SITE),
Activity = as.factor(Activity),
Coral_Type = as.factor(Coral_Type))
levels(CWsub$Coral_Type)
##remove soft corals
CWsub <- CWsub %>%
filter(Coral_Type != "Soft corals") %>%
droplevels()
levels(CWsub$Coral_Type)
#create new columns for colour scores with just number
CWsub <- CWsub %>%
mutate(
Lightest_num = str_extract(`Colour_Code_Lightest`, "[1-6]") %>% as.numeric(),
Darkest_num = str_extract(`Colour_Code_Darkest`, "[1-6]") %>% as.numeric()
)
##Remove sites
CWsub <- CWsub %>%
filter(!SITE %in% c("Gorgonian Hole", "Gantry", "Pam's Point", "Plate Ledge", "North Beach", "North West")) %>%
droplevels()
CWsub %>%
count(SITE)
#select month range
CWsub2 <- CWsub %>%
filter(
(year(DATE) != 2024 & month(DATE) >= 9 & month(DATE) <= 11) |
(year(DATE) == 2024 & month(DATE) %in% c(3:5, 9:11)))
View(CWsub2)
#check it worked
CWsub %>%
mutate(month = month(DATE)) %>%
distinct(month)
#check it worked
CWsub2 %>%
mutate(month = month(DATE)) %>%
distinct(month)
#check it worked
CWsub2 %>%
mutate(
year = year(DATE),
month = month(DATE, label = TRUE)  # label = TRUE gives month names
) %>%
count(year, month) %>%
arrange(year, month)
#check it worked
CWsub %>%
mutate(
year = year(DATE),
month = month(DATE, label = TRUE)
) %>%
ggplot(aes(x = month, fill = factor(year))) +
geom_bar(position = "dodge") +
labs(title = "Number of Observations per Month by Year",
x = "Month", y = "Count", fill = "Year") +
theme_minimal()
#now filter years
CWsub <- CWsub %>%
filter(year(DATE) >= 2013)
#check it worked
CWsub2 %>%
mutatate(year = year(DATE)) %>%
distinct(year)
#check it worked
CWsub2 %>%
mutate(year = year(DATE)) %>%
distinct(year)
#now filter years
CWsub2 <- CWsub %>%
filter(year(DATE) >= 2013)
#check it worked
CWsub2 %>%
mutate(year = year(DATE)) %>%
distinct(year)
#check it worked
CWsub2 %>%
mutate(year = year(DATE)),
#check it worked
CWsub2 %>%
mutate(year = year(DATE),
month = month(DATE)) %>%
distinct(year, month)
#check filtering worked
CWsub2 %>%
mutate(
year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE, abbr = TRUE)  # Converts to Sep, Oct, etc.
) %>%
distinct(year, month_num, month) %>%
arrange(year, month_num) %>%
select(year, month)
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE, abbr = TRUE)) %>%
distinct(year, month_num, month) %>%
arrange(year, month_num) %>%
select(year, month)
work_months
View(work_months)
View(CWsub)
####OR select month range including autumn 2024
CWsub2 <- CWsub %>%
filter(
(year(DATE) != 2024 & month(DATE) >= 9 & month(DATE) <= 11) &
(year(DATE) == 2024 & month(DATE) %in% c(3:5, 9:11)))
#now filter years, add 2 if used autumn 2024
CWsub2 <- CWsub %>%
filter(year(DATE) >= 2013)
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE, abbr = TRUE)) %>%
distinct(year, month_num, month) %>%
arrange(year, month_num) %>%
select(year, month)
View(work_months)
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE)) %>%
distinct(year, month_num, month) %>%
arrange(year, month_num) %>%
select(year, month)
#check filtering worked
work_months
work_months
View(work_months)
View(work_months)
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE)) %>%
distinct(year, month) %>%
arrange(year, month) %>%
select(year, month)
View(work_months)
View(CWsub)
####OR select month range including autumn 2024
CWsub2 <- CWsub %>%
filter(
(month(DATE) >= 9 & month(DATE) <= 11) |
(year(DATE) == 2024 & month(DATE) %in% c(3:5)))
#now filter years, add 2 if used autumn 2024
CWsub2 <- CWsub %>%
filter(year(DATE) >= 2013)
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE)) %>%
distinct(year, month) %>%
arrange(year, month) %>%
select(year, month)
work_months
View(work_months)
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv(file = "coral-watch-heron-cleaned.csv")
#select columns
CWsub <- coral_watch %>%
select("SITE", "DATE", "Activity", "Coral_No", "Colour_Code_Lightest", "Colour_Code_Darkest",
"Average_Colour", "Coral_Type")
#change data to date format
CWsub <- CWsub %>%
mutate(DATE = dmy(DATE))
#set categorical variables as factors
CWsub <- CWsub %>%
mutate(SITE = as.factor(SITE),
Activity = as.factor(Activity),
Coral_Type = as.factor(Coral_Type))
##remove soft corals
CWsub <- CWsub %>%
filter(Coral_Type != "Soft corals") %>%
droplevels()
#create new columns for colour scores with just number
CWsub <- CWsub %>%
mutate(
Lightest_num = str_extract(`Colour_Code_Lightest`, "[1-6]") %>% as.numeric(),
Darkest_num = str_extract(`Colour_Code_Darkest`, "[1-6]") %>% as.numeric()
)
##Remove sites
CWsub <- CWsub %>%
filter(!SITE %in% c("Gorgonian Hole", "Gantry", "Pam's Point", "Plate Ledge", "North Beach", "North West")) %>%
droplevels()
####OR select month range including autumn 2024
CWsub2 <- CWsub %>%
filter(
(month(DATE) >= 9 & month(DATE) <= 11) |
(year(DATE) == 2024 & month(DATE) %in% c(3:5)))
#now filter years, add 2 if used autumn 2024
CWsub2 <- CWsub %>%
filter(year(DATE) >= 2013)
#now filter years
CWsub <- CWsub %>%
filter(year(DATE) >= 2013)
View(CWsub)
####OR select month range including autumn 2024
CWsub2 <- CWsub %>%
filter(
(month(DATE) >= 9 & month(DATE) <= 11) |
(year(DATE) == 2024 & month(DATE) %in% c(3:5)))
#check filtering worked
work_months <- CWsub2 %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE)) %>%
distinct(year, month) %>%
arrange(year, month) %>%
select(year, month)
View(work_months)
#check it worked
CWsub %>%
mutate(month = month(DATE)) %>%
distinct(month)
#select month range
CWsub <- CWsub %>%
filter(month(DATE) >= 9 & month(DATE) <= 11)
#check it worked
CWsub %>%
mutate(month = month(DATE)) %>%
distinct(month)
#check filtering worked
work_months <- CWsub %>%
mutate(year = year(DATE),
month_num = month(DATE),
month = month(DATE, label = TRUE)) %>%
distinct(year, month) %>%
arrange(year, month) %>%
select(year, month)
View(work_months)
#create a column just for year
CWsub2 <- CWsub2 %>%
mutate(year = year(DATE)) %>%
relocate(year, .before=1 ) %>%
mutate(year = as.factor(year))
##see how many NA's
CWsub2 %>%
filter(if_any(everything(), is.na))
#change format so 'light and 'dark' colours are in one column
CWsublong <- CWsub2 %>%
pivot_longer(
cols = c(Lightest_num, Darkest_num),
names_to = "Type",
values_to = "Colour_Code_num"
)
##add bleaching column?????
CWsublong <- CWsublong %>%
mutate(health = ifelse(Colour_Code_num <= 1, "bleached", "not bleached"))
#create survey ID
CWsublong<- CWsublong %>%
unite(survey_id, SITE, DATE, sep = "_", remove = FALSE)
CWsublong <- CWsublong %>%
mutate(site_type = if_else(
SITE %in% c("Cappuccino", "Jetty Flat", "Last Resort", "Research Zone", "Shark Bay", "White Wedding"),
"RF", "RS")) %>%
relocate(site_type, .after = SITE)
#sort by RF and RS for easy plotting
CWsublong <- CWsublong %>%
mutate(SITE_label = paste0(SITE, " (", site_type, ")")) %>%
relocate(SITE_label, .after = site_type) %>%
arrange(site_type, SITE) %>%
mutate(SITE_label = factor(SITE_label, levels = unique(SITE_label)))
##2024 autumn version
write_csv(CWsublong, "coralwatch_sub_plus_autumn.csv")
#####CoralWatch visualisations and statistics###
library(ggplot2)
library(tidyverse)
CWsub <- read_csv(file = "coralwatch_sub_autumn.csv")
CWsub <- read_csv(file = "coralwatch_sub_plus_autumn.csv")
######proportion of colour scores per site and year
CWsub <- CWsub %>%
arrange(site_type, SITE) %>%
mutate(SITE_label = factor(SITE_label, levels = unique(SITE_label)))
View(CWsub)
p1 <- CWsub %>%
group_by(SITE_label, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE_label, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(Colour_Code_num), y = prop, fill = factor(Colour_Code_num))) +
geom_col() +
facet_grid(SITE_label ~ year, scales = "free_y") +
labs(x = "Colour Score",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(strip.text.y.right = element_text(angle = 0))
p1
#stacked bars with each year as bar and facet wrap sites
p1b <- CWsub %>%
group_by(SITE_label, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE_label, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(year), y = prop, fill = factor(Colour_Code_num))) +
geom_col(position = "stack") +
facet_wrap(~SITE_label) +
labs(x = "Year",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(strip.text.y.right = element_text(angle = 0))
p1b
#####detect bleaching if 1 is more than 20% per survey
CW_bleach_detect <- CWsub %>%
group_by(survey_id, SITE, site_type, SITE_label, DATE, year) %>%
summarise(
observations = n(),
n_bleach = sum(Colour_Code_num == 1),
prop_bleach = n_bleach / observations
) %>% ungroup %>%
mutate(bleached = prop_bleach > 0.2)
View(CW_bleach_detect)
###as above but merging surveys by year
CW_bleach_detect_year <- CW_bleach_detect %>%
group_by(year, SITE, site_type, SITE_label, bleached) %>%
reframe(
n_surveys = n_distinct(survey_id, na.rm = TRUE),
n_observations = sum(observations),
n_bleached_obs = sum(n_bleach),
prop_bleach_obs = n_bleached_obs / n_observations)
#Group RF and RS sites - dont run this line if you dont want grouped by RS or RF
CW_bleach_detect_year <- CW_bleach_detect_year %>%
arrange(site_type, SITE) %>%
mutate(SITE_label = factor(SITE_label, levels = unique(SITE_label)))
###plot (above) bleaching by year (sites combined)
p2 <- CW_bleach_detect_year %>%
group_by(year, bleached) %>%
summarise(total_surveys = sum(n_surveys), .groups = "drop") %>%
ggplot(aes(x = factor(year), y = total_surveys, fill = bleached)) +
geom_col(position = "stack") +
labs(x = "Year",
y = "Number of Surveys",
fill = "Bleached (>20% 1s)") +
scale_fill_manual(values = c("tan2", "tomato2")) +
theme_minimal()
p2
ggsave("CW_surveys_with_20perc_bleach_plus_autmun2024.jpeg", p2, width = 7, height = 5, dpi = 300)
###each survey plotted to visualise prop bleached corals per survey
ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_jitter(width = 0.2, aes(color = prop_bleach_obs), size = 3, alpha = 0.7) +
scale_color_gradient(low = "#FFE5B4", high = "#D35400") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
x = "Year",
y = "Proportion of Bleached Corals Per Survey",
color = "Bleaching Rate"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#as above but with boxplots
p3 <- ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_boxplot(outlier.shape = NA, fill = "#FFD580", alpha = 0.4) +
geom_jitter(aes(color = prop_bleach_obs), width = 0.2, size = 3, alpha = 0.9) +
scale_color_gradient(high = "#FFE5B4", low = "#D35400", guide = "none") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
labs(
x = "Year",
y = "Proportion of Bleached Corals (per Survey)",
color = "Bleaching Rate"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p3
#only looking at proportion bleached by year (surveys combined)
p4 <- ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs, group = SITE_label, color = SITE_label)) +
geom_line() +
geom_point() +
labs(x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ SITE_label)  +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
ggsave("CW_prop_bleach_SITE_year_plus_autumn2024.jpeg", p4, width = 11, height = 7, dpi = 300)
##heatmap of proportion bleached by year
p5 <- ggplot(CW_bleach_detect_year, aes(x = factor(year), y = (SITE_label), fill = prop_bleach_obs)) +
geom_tile(color = "white", linewidth = 0.3) +
scale_fill_gradient(low = "#FFFFCC", high = "#E31A1C", na.value = "grey90") +
labs(x = "Year", y = "Site", fill = "Prop. Bleached") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p5
ggsave("CW_heatmap_bleach_SITE_year_plus_autumn2024.jpeg", p5, width = 11, height = 7, dpi = 300)
#as above but boxplots (no site), might be good to see range
ggplot(CW_bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_boxplot(fill = "lightblue") +
labs(x = "Year", y = "Proportion Bleached") +
theme_minimal()
##########CORAL WATCH###########################
##read correct file in
CWsub <- read_csv(file = "coralwatch_sub.csv")
#####CoralWatch visualisations and statistics###
library(ggplot2)
library(tidyverse)
##########CORAL WATCH###########################
##read correct file in
CWsub <- read_csv(file = "coralwatch_sub.csv")
######proportion of colour scores per site and year
CWsub <- CWsub %>%
arrange(site_type, SITE) %>%
mutate(SITE_label = factor(SITE_label, levels = unique(SITE_label)))
p1 <- CWsub %>%
group_by(SITE_label, year, Colour_Code_num) %>%
summarise(n = n(), .groups = "drop") %>%
group_by(SITE_label, year) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = factor(Colour_Code_num), y = prop, fill = factor(Colour_Code_num))) +
geom_col() +
facet_grid(SITE_label ~ year, scales = "free_y") +
labs(x = "Colour Score",
y = "Proportion") +
scale_fill_brewer(palette = "YlOrRd", name = "Score") +
theme_minimal(base_size = 12) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(strip.text.y.right = element_text(angle = 0))
ggsave("figs","CW_ColourScore_S_Y1.jpeg", p1, width = 11, height = 9, dpi = 300)
View(p1)
p1
ggsave("figs","CW_ColourScore_S_Y1.jpeg", p1, width = 11, height = 9, dpi = 300)
ggsave(path = "figs", filename = "CW_ColourScore_S_Y1.jpeg", p1, width = 11, height = 9, dpi = 300)
install.packages("here")
library(here)
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv(here(file = "coral-watch-heron-cleaned.csv"))
library(tidyverse)
library(here)
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv(here(file = "coral-watch-heron-cleaned.csv"))
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv(here("coral-watch-heron-cleaned.csv"))
RC_S <- read_csv(here("RC_Substrate_cleaned.csv"))
###############################################################
##read in RCA GPS data
library(foreign)
RCAsites <- read.dbf(here("ReefCheckAUS_HeronData.dbf"))
RCAsites <- read.dbf("ReefCheckAUS_HeronData.dbf")
###############################################################
##read in RCA GPS data
library(foreign)
RCAsites <- read.dbf("ReefCheckAUS_HeronData.dbf")
#####RCA visualisations and statistics###
library(ggplot2)
library(tidyverse)
library(here)
##########Reef Check Australia###########################
RC_SubPropSY <- read_csv(here("RC_Substrate_Proportions.csv"))
RC_substrate_long_grouped <- read_csv(here("RC_substrate_long_grouped.csv"))
#HC and HCB prop over sites and years to see increase/decrease
HCtrend <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
group_by(SITE_label, year, substrate_group) %>%
summarise(total = sum(Proportion), .groups = "drop")
View(HCtrend)
###see if HC and HCB prop changes respectively i.e. is there a relationship between them
# Reshape to wide format so HC and HCB are in their own columns
HCtrend_wide <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
pivot_wider(names_from = substrate_group, values_from = Proportion)
########################################################################
#######################################################################
#calculate prop bleached (HCB) to match CW props
RC_bleach <- RC_substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB")) %>%
group_by(SITE_label, year) %>%
mutate(total_coral = sum(Proportion)) %>%
filter(substrate_group == "HCB") %>%
mutate(prop_bleached = Proportion / total_coral) %>%
ungroup() %>%
arrange(site_type, SITE) %>%
mutate(SITE_label = factor(SITE_label, levels = unique(SITE_label)))
View(RC_bleach)
View(RC_bleach)
write_csv(RC_bleach, file = here::here("output_data", "RC_bleach.csv"))
