group_by(SITE) %>%
nest() %>%
mutate(
model = map(data, ~ lm(HC ~ HCB, data = .x)),
tidied = map(model, tidy)
) %>%
unnest(tidied) %>%
filter(term == "HCB")  # focus on the effect of HCB on HC
by_site_models
install.packages("compositions")  # if not already installed
View(filtered)
#filter data to make loop easier
filtered <- substrate_long_grouped %>%
filter(substrate_group %in% c("HC", "HCB"))
# Avoid zeros: add a small pseudo-count if needed
filtered[filtered == 0] <- 0.001
View(filtered)
# Apply CLR transformation
clr_data <- as.data.frame(clr(filtered))
library(compositions)
# Apply CLR transformation
clr_data <- as.data.frame(clr(filtered))
View(filtered)
# Now you can run PCA, clustering, regression, etc.
# For example, PCA:
pca_res <- prcomp(clr_data, scale. = TRUE)
biplot(pca_res, main = "PCA on CLR-transformed Substrate Data")
install.packages("ggtern")  # if not already installed
library(ggtern)
ggtern(data = HCtrend_wide,
aes(x = HC, y = HCB)) +
geom_point(alpha = 0.6, color = "tomato") +
labs(title = "Substrate Composition: Healthy vs Bleached Coral vs Other",
x = "Healthy Hard Coral (HC)",
y = "Bleached Hard Coral (HCB)",
z = "Other Substrate") +
theme_bw()
View(bleach_detect_year)
ggplot(bleach_detect_year, aes(x = year, y = prop_bleach_obs, group = SITE, color = SITE)) +
geom_line() +
geom_point() +
labs(title = "Bleaching Proportion Over Time by Site",
x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +  # optional, if many sites
facet_wrap(~ SITE)  # or facet_grid if you want more control
View(bleach_detect_year)
#only looking at proportion bleached by year (surveys combined)
ggplot(bleach_detect_year, aes(x = year, y = prop_bleach_obs, group = SITE, color = SITE)) +
geom_line() +
geom_point() +
labs(title = "Bleaching Proportion Over Time by Site",
x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +  # optional, if many sites
facet_grid(~ SITE)  # or facet_grid if you want more control
#only looking at proportion bleached by year (surveys combined)
ggplot(bleach_detect_year, aes(x = year, y = prop_bleach_obs, group = SITE, color = SITE)) +
geom_line() +
geom_point() +
labs(title = "Bleaching Proportion Over Time by Site",
x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +
facet_plot(~ SITE)
#only looking at proportion bleached by year (surveys combined)
ggplot(bleach_detect_year, aes(x = year, y = prop_bleach_obs, group = SITE, color = SITE)) +
geom_line() +
geom_point() +
labs(title = "Bleaching Proportion Over Time by Site",
x = "Year", y = "Proportion Bleached") +
theme_minimal() +
theme(legend.position = "none") +
facet_wrap(~ SITE)
ggplot(bleach_detect_year, aes(x = factor(year), y = reorder(SITE, prop_bleach_obs), fill = prop_bleach_obs)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "yellow", high = "red", na.value = "grey90") +
labs(title = "Bleaching Heatmap by Site and Year",
x = "Year", y = "Site", fill = "Prop. Bleached") +
theme_minimal()
##heatmap of proportion bleached by year
ggplot(bleach_detect_year, aes(x = factor(year), y = (SITE), fill = prop_bleach_obs)) +
geom_tile(color = "white") +
scale_fill_gradient(low = "yellow", high = "red", na.value = "grey90") +
labs(title = "Bleaching Heatmap by Site and Year",
x = "Year", y = "Site", fill = "Prop. Bleached") +
theme_minimal()
##heatmap of proportion bleached by year
ggplot(bleach_detect_year, aes(x = factor(year), y = (SITE), fill = prop_bleach_obs)) +
geom_tile(color = "white", linewidth = 0.3) +
scale_fill_gradient(low = "#FFFFCC", high = "#E31A1C", na.value = "grey90") +
labs(title = "Bleaching Heatmap by Site and Year",
x = "Year", y = "Site", fill = "Prop. Bleached") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(bleach_detect_year, aes(x = factor(year), y = prop_bleach_obs)) +
geom_boxplot(fill = "lightblue") +
labs(title = "Distribution of Bleaching Across Sites by Year",
x = "Year", y = "Proportion Bleached") +
theme_minimal()
ggplot(bleach_detect_year, aes(x = lon, y = lat, color = prop_bleach)) +
geom_point(size = 3) +
scale_color_gradient(low = "skyblue", high = "darkred") +
labs(title = "Bleaching Across Sites", color = "Prop. Bleached") +
theme_minimal()
###############################################################
##read in RCA GPS data
library(foreign)
RCAsites <- read.dbf("ReefCheckAUS_HeronData.dbf")
View(RCAsites)
#plot relationship between HCB and HC by site
ggplot(HCtrend_wide, aes(x = HCB, y = HC)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "red", linewidth = 0.8) +
facet_wrap(~ SITE, scales = "free") +  # allows different axis ranges per site
theme_minimal() +
labs(
title = "Relationship between Bleached (HCB) and Healthy Coral (HC) by Site",
x = "Proportion Bleached Coral (HCB)",
y = "Proportion Healthy Hard Coral (HC)"
)
###as above but years
ggplot(HCtrend_wide, aes(x = HCB, y = HC)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE, color = "blue", linewidth = 0.8) +
facet_wrap(~ year, scales = "free") +  # lets axes adapt to the data in each year
theme_minimal() +
labs(
title = "Relationship Between Bleached (HCB) and Healthy Coral (HC) by Year",
x = "Proportion Bleached Coral (HCB)",
y = "Proportion Healthy Hard Coral (HC)"
)
ggplot(bleach_detect_year, aes(x = lon, y = lat, color = prop_bleach)) +
geom_point(size = 3) +
scale_color_gradient(low = "skyblue", high = "darkred") +
labs(title = "Bleaching Across Sites", color = "Prop. Bleached") +
theme_minimal()
View(HCtrend_wide)
##############looking at relationship between HC and HCB - only for showing trends as data is not independent
ggplot(HCtrend_wide, aes(x = HCB, y = HC)) +
geom_point(alpha = 0.6, color = "darkorange") +
geom_smooth(method = "loess", color = "steelblue", se = TRUE) +
facet_wrap(~ SITE) +
labs(
title = "Relationship Between Bleached and Healthy Hard Coral (by Site)",
x = "Proportion Bleached Hard Coral (HCB)",
y = "Proportion Healthy Hard Coral (HC)"
) +
theme_minimal()
##############looking at relationship between HC and HCB - only for showing trends as data is not independent
ggplot(HCtrend_wide, aes(x = HCB, y = HC)) +
geom_point(alpha = 0.6, color = "darkorange") +
geom_smooth(method = "loess", color = "steelblue", se = TRUE) +
facet_wrap(~ year) +
labs(
title = "Relationship Between Bleached and Healthy Hard Coral (by Site)",
x = "Proportion Bleached Hard Coral (HCB)",
y = "Proportion Healthy Hard Coral (HC)"
) +
theme_minimal()
ggplot(HCtrend_wide, aes(x = HCB, y = HC)) +
geom_point() +
geom_smooth(method = "loess") +
facet_wrap(~ year)
# Fit one model per substrate group
lm_results <- substrate_long_grouped %>%
group_by(substrate_group) %>%
do(tidy(lm(Proportion ~ year, data = .)))
# View slope (estimate) for each substrate group
lm_results %>% filter(term == "year")
#plot it
ggplot(substrate_long_grouped, aes(x = year, y = Proportion)) +
geom_point(alpha = 0.5, color = "grey30") +
geom_smooth(method = "lm", se = FALSE, color = "#E74C3C", linewidth = 1.2) +
facet_wrap(~ substrate_group, scales = "free_y") +
labs(
title = "Linear Trends of Substrate Groups Over Time",
x = "Year", y = "Proportion"
) +
theme_minimal(base_size = 14)
# Fit mixed model for one substrate group (HC and HCB)
hard_coral <- substrate_long_grouped %>%
filter(substrate_group == "HC")
m1 <- lmer(Proportion ~ year + (1 | SITE), data = hard_coral)
summary(m1)
hard_coral_b <- substrate_long_grouped %>%
filter(substrate_group == "HCB")
m2 <- lmer(Proportion ~ year + (1 | SITE), data = hard_coral_b)
###################################################################
library(lme4)
library(lmerTest)
# Fit mixed model for one substrate group (HC and HCB)
hard_coral <- substrate_long_grouped %>%
filter(substrate_group == "HC")
m1 <- lmer(Proportion ~ year + (1 | SITE), data = hard_coral)
summary(m1)
hard_coral_b <- substrate_long_grouped %>%
filter(substrate_group == "HCB")
m2 <- lmer(Proportion ~ year + (1 | SITE), data = hard_coral_b)
summary(m2)
#check model performance
library(performance)
check_model(m2)
#see any proportions over 0.1
hard_coral_b %>%
filter(Proportion > 0.1) %>%
arrange(desc(Proportion))
#plot HCB prop over time
ggplot(hard_coral_b, aes(x = factor(year), y = Proportion, color = SITE)) +
geom_point(alpha = 0.6) +
geom_smooth(method = "lm", se = FALSE, aes(group = SITE), linetype = "dashed") +
geom_smooth(method = "lm", aes(group = 1), color = "black", linewidth = 1.2) +
labs(
title = "Bleached Hard Coral Proportion Over Time by Site",
y = "Bleached Hard Coral Proportion", x = "Year"
) +
theme_minimal()
#re run the model with dummmy for harrys bommie 2024
hard_coral_b <- hard_coral_b %>%
mutate(bleach_event = if_else(SITE == "Harry's Bommie" & year == 2024, 1, 0))
#model runs better
m3 <- lmer(Proportion ~ year + bleach_event + (1 | SITE), data = hard_coral_b)
# Arrange before plotting to fix line ordering
hard_coral_b <- hard_coral_b %>% arrange(year)
View(hard_coral_b)
plot(hard_coral_b$year, hard_coral_b$Proportion,
pch = 16, col = "grey60",
xlab = "Year", ylab = "Proportion Bleached",
main = "Predicted Bleaching Over Time")
lines(hard_coral_b$year, hard_coral_b$predicted, col = "red", lwd = 2)
# Optional: Add points for predictions too
points(hard_coral_b$year, hard_coral_b$predicted, col = "red", pch = 3)
# install.packages("glmmTMB") if not already installed
library(glmmTMB)
install.packages("glmmTMB")
library(glmmTMB)
# Make sure 0s and 1s are slightly nudged
hard_coral_b <- hard_coral_b %>%
mutate(Proportion_adj = ifelse(Proportion == 0, 0.0001,
ifelse(Proportion == 1, 0.9999, Proportion)))
# Fit beta mixed model
m_beta <- glmmTMB(Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family())
summary(m_beta)
# Get predictions
hard_coral_b$predicted_beta <- predict(m_beta, type = "response")
# Plot
ggplot(hard_coral_b, aes(x = year, y = Proportion_adj)) +
geom_point(aes(color = SITE), alpha = 0.6) +
geom_line(aes(y = predicted_beta), color = "red", size = 1) +
labs(title = "Beta Model: Predicted Bleached Coral Proportions",
y = "Proportion (adjusted)", x = "Year") +
theme_minimal()
# Fixed-effects only beta model
m_beta_simple <- glmmTMB(Proportion_adj ~ year + bleach_event,
data = hard_coral_b,
family = beta_family())
summary(m_beta_simple)
hard_coral_b %>%
group_by(year) %>%
summarise(
min_prop = min(Proportion_adj),
max_prop = max(Proportion_adj),
n_sites = n_distinct(SITE)
)
m_beta_betar <- glmmTMB(Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family(link = "loglog"))
summary(m_beta_betar)
library(glmmTMB)
View(hard_coral_b)
hard_coral_b$predicted <- predict(m_beta_simple, type = "response")
ggplot(hard_coral_b, aes(x = year, y = Proportion_adj, color = SITE)) +
geom_point(alpha = 0.4) +
geom_line(aes(y = predicted), color = "black", size = 1.2) +
labs(
title = "Predicted Bleaching Proportion Over Time",
y = "Adjusted Bleached Proportion",
x = "Year"
) +
theme_minimal()
View(hard_coral_b)
############################by site
m_beta_site <- glmmTMB(
Proportion_adj ~ year + bleach_event + (1 | SITE),
data = hard_coral_b,
family = beta_family()
)
# Add predictions to the dataset
hard_coral_b$predicted_site <- predict(m_beta_site, type = "response")
ggplot(hard_coral_b, aes(x = year, y = predicted_site, color = SITE)) +
geom_line(size = 1.1) +
geom_point(aes(y = Proportion_adj), alpha = 0.4) +  # optional: raw data points
labs(
title = "Predicted Bleaching Trends by Site",
y = "Predicted Bleached Proportion",
x = "Year"
) +
theme_minimal() +
theme(legend.position = "right")
View(m_beta_simple)
View(hard_coral_b)
# Add predictions from the fixed-effects beta model
hard_coral_b$predicted <- predict(m_beta_simple, type = "response")
# Plot predictions by site
ggplot(hard_coral_b, aes(x = year, y = predicted, color = SITE)) +
geom_line(size = 1) +
geom_point(aes(y = Proportion_adj), alpha = 0.5) +  # add actual observed values
labs(
title = "Predicted Bleaching Over Time by Site",
x = "Year",
y = "Predicted Proportion Bleached",
color = "Site"
) +
theme_minimal()
#plot above but by site
ggplot(hard_coral_b, aes(x = year, y = predicted, color = SITE)) +
geom_line(size = 1) +
geom_point(aes(y = Proportion_adj), alpha = 0.5) +  # add actual observed values
labs(
title = "Predicted Bleaching Over Time by Site",
x = "Year",
y = "Predicted Proportion Bleached",
color = "Site"
) +
theme_minimal()
setwd("~/Desktop/QBIOL/QBIO7008-ResearchProject/WorkingData")
########CORAL WATCH CLEANING#########################
#####################################################
coral_watch <- read_csv("coral-watch-heron-cleaned.csv")
#select columns
CWsub <- coral_watch %>%
select("SITE", "DATE", "Activity", "Coral_No", "Colour_Code_Lightest", "Colour_Code_Darkest",
"Average_Colour", "Coral_Type")
#change data to date format
CWsub <- CWsub %>%
mutate(DATE = dmy(DATE))
str(CWsub)
#set categorical variables as factors
CWsub <- CWsub %>%
mutate(SITE = as.factor(SITE),
Activity = as.factor(Activity),
Coral_Type = as.factor(Coral_Type))
levels(CWsub$Coral_Type)
##remove soft corals
CWsub <- CWsub %>%
filter(Coral_Type != "Soft corals") %>%
droplevels()
levels(CWsub$Coral_Type)
#create new columns for colour scores with just number
CWsub <- CWsub %>%
mutate(
Lightest_num = str_extract(`Colour_Code_Lightest`, "[1-6]") %>% as.numeric(),
Darkest_num = str_extract(`Colour_Code_Darkest`, "[1-6]") %>% as.numeric()
)
unique(CWsub$SITE)
levels(CWsub$SITE)
##Remove sites
CWsub <- CWsub %>%
filter(!SITE %in% c("Gorgonian Hole", "Gantry", "Pam's Point", "Plate Ledge", "North Beach", "North West")) %>%
droplevels()
CWsub %>%
count(SITE)
#select month range
CWsub <- CWsub %>%
filter(month(DATE) >= 9 & month(DATE) <= 11)
#check it worked
CWsub %>%
mutate(month = month(DATE)) %>%
distinct(month)
#now filter years
CWsub <- CWsub %>%
filter(year(DATE) >= 2013)
#create a column just for year
CWsub <- CWsub %>%
mutate(year = year(DATE)) %>%
relocate(year, .before=1 ) %>%
mutate(year = as.factor(year))
unique(CWsub$year)
##see how many NA's
CWsub %>%
filter(if_any(everything(), is.na))
#change format so 'light and 'dark' colours are in one column
CWsublong <- CWsub %>%
pivot_longer(
cols = c(Lightest_num, Darkest_num),
names_to = "Type",
values_to = "Colour_Code_num"
)
##add bleaching column?????
CWsublong <- CWsublong %>%
mutate(health = ifelse(Colour_Code_num <= 1, "bleached", "not bleached"))
#create survey ID
CWsublong<- CWsublong %>%
unite(survey_id, SITE, DATE, sep = "_", remove = FALSE)
write_csv(CWsublong, "coralwatch_sub.csv")
RC_S <- read_csv("RC_Substrate_cleaned.csv")
str(RC_S)
glimpse(RC_S)
#convert date as date
RC_Sb <- RC_S %>%
mutate(DATE = dmy(DATE))
names(RC_S)
#remove unwanted columns
RC_Sb <- RC_Sb %>%
select(-datetime, -REEF, -RESEARCH_SITE)
#create a column just for year
RC_Sb <- RC_Sb %>%
mutate(year = year(DATE)) %>%
relocate(year, .before=1 ) %>%
mutate(year = as.factor(year))
unique(RC_Sb$year)
#now filter years
RC_Sb <- RC_Sb %>%
filter(year(DATE) >= 2013)
#check months
RC_Sb %>%
mutate(month = month(DATE)) %>%
distinct(month)
##Remove sites
unique(RC_Sb$SITE)
RC_Sb <- RC_Sb %>%
filter(!SITE %in% c("Blue Pools", "Gorgonian Hole", "Pancakes", "Coral Gardens", "Stevos Carbonara"))
##Remove sites
unique(RC_Sb$SITE)
#change any dive site names to match CW
RC_Sb <- RC_Sb %>%
mutate(SITE = case_when(
SITE == "Half Way (Doug's Place)" ~ "Half Way",
SITE == "Cappuccino Express" ~ "Cappuccino",
TRUE ~ SITE
))
#check counts
RC_Sb %>%
count(SITE)
##see how many NA's
RC_Sb %>%
filter(if_any(everything(), is.na))
#set site as factor
RC_Sb <- RC_Sb %>%
mutate(SITE = as.factor(SITE))
str(RC_Sb)
#Pivot RCA data
# Identify all columns that start with "SUBSTRATE_"
substrate_cols <- RC_Sb %>%
select(starts_with("SUBSTRATE_")) %>%
colnames()
# Reshape
RCA_long <- RC_Sb %>%
pivot_longer(
cols = all_of(substrate_cols),
names_to = "point",
values_to = "substrate_code")
#Sorts by site and date to get count/proportions of substrate. Might be better for plotting, can select columns out if needed.
substrate_prop <- RCA_long %>%
group_by(SITE, DATE, year, substrate_code) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(SITE, year) %>%
mutate(
total_points = sum(count),
proportion = count / total_points
) %>%
ungroup()
#Merge site and date rows, substr codes as columns
SubPropSY <- RCA_long %>%
group_by(SITE, year, substrate_code) %>%
summarise(count = n(), .groups = "drop") %>% #counts all instances of substrate code, ungroups
group_by(SITE, year) %>% #groups again by survey
mutate(
total_points = sum(count),
proportion = round(count / total_points, 3)
) %>%
select(SITE, year, substrate_code, proportion) %>% #keeps only columns we need
pivot_wider( #turns table wide format
names_from = substrate_code,
values_from = proportion,
values_fill = 0 #fill instead of NA
)
write_csv(SubPropSY, "RC_Substrate_Proportions.csv")
############################################################
#Pivot back to long format, might be easier for ggplot, retains 0 prop values
substrate_long <- SubPropSY %>%
pivot_longer(
cols = -c(SITE, year),
names_to = "Substrate",
values_to = "Proportion"
)
unique(substrate_long$Substrate)
substrate_long_grouped <- substrate_long %>%
mutate(substrate_group = case_when(
Substrate %in% c("HC", "HCBR", "HCE", "HCP", "HCM", "HCF") ~ "HC",
Substrate == "HCB" ~ "HCB",
Substrate %in% c("RB", "RCCA", "RCTA", "SD", "RC", "SI") ~ "NL",
Substrate %in% c("RKCTA", "RKC", "RKCNIA") ~ "RKC",
Substrate %in% c("SC", "SCL", "SCZ", "SCB") ~ "SC",
Substrate %in% c("SP", "SPE") ~ "SP",
Substrate == "OT" ~ "OT",
Substrate == "NIA" ~ "NIA",
Substrate == "NR" ~ "NR",
TRUE ~ "Unknown")) %>%
group_by(SITE, year, substrate_group) %>%
summarise(Proportion =sum(Proportion), .groups = "drop") ##make sure to run this part or the props dont make sense, need to sum them
write.csv(substrate_long_grouped, "substrate_long_grouped.csv", row.names = FALSE)
#see if any codes were missed
substrate_long_grouped %>%
filter(substrate_group == "Unknown") %>%
distinct(substrate_group)
#counts of NR - assume it means not recorded????????
numNR <- substrate_long_grouped %>%
filter(substrate_group == "NR")
unique(numNR$Proportion)
